version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: calculadora-postgres-prod
    environment:
      POSTGRES_DB: calculadora_hc
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./packages/backend/prisma/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - calculadora-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: calculadora-redis-prod
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - calculadora-network
    restart: unless-stopped

  backend:
    build:
      context: .
      dockerfile: packages/backend/Dockerfile
    container_name: calculadora-backend-prod
    environment:
      DATABASE_URL: postgresql://postgres:${POSTGRES_PASSWORD}@postgres:5432/calculadora_hc
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      PORT: 3001
      NODE_ENV: production
      CORS_ORIGIN: ${FRONTEND_URL}
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - redis
    networks:
      - calculadora-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: .
      dockerfile: packages/frontend/Dockerfile
    container_name: calculadora-frontend-prod
    environment:
      VITE_API_URL: ${API_URL}
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - calculadora-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  calculadora-network:
    driver: bridge
